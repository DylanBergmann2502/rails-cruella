---
openapi: 3.0.1
info:
  title: Rails Cruella API
  version: v1
  description: A comprehensive Rails API boilerplate with modern features and best
    practices
paths:
  "/auth/create-account":
    post:
      summary: Create Account
      tags:
      - Authentication
      description: Create a new user account
      parameters: []
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Your account has been created
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: There was an error creating your account
                  field-error:
                    type: string
                    example: password is too short (minimum is 8 characters)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email address for the account
                  example: user@example.com
                password:
                  type: string
                  description: Password (minimum 8 characters)
                  example: password123
              required:
              - email
              - password
  "/auth/login":
    post:
      summary: Login
      tags:
      - Authentication
      description: Login to get JWT tokens
      parameters: []
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiJ9...
                    description: JWT access token
                  refresh_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiJ9...
                    description: JWT refresh token
                  success:
                    type: string
                    example: You have been logged in
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: There was an error logging in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email address for the account
                  example: user@example.com
                password:
                  type: string
                  description: Password for the account
                  example: password123
              required:
              - email
              - password
  "/auth/logout":
    post:
      summary: Logout
      tags:
      - Authentication
      description: Logout and invalidate JWT token
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: You have been logged out
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
  "/auth/jwt-refresh":
    post:
      summary: Refresh JWT Token
      tags:
      - Authentication
      description: Refresh JWT access token using refresh token. Requires both Authorization
        header with access token (can be expired) and refresh token in request body.
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiJ9...
                    description: New JWT access token
                  refresh_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiJ9...
                    description: New JWT refresh token
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: no JWT access token provided during refresh
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: JWT refresh token
                  example: eyJhbGciOiJIUzI1NiJ9...
              required:
              - refresh_token
  "/auth/close-account":
    post:
      summary: Close Account
      tags:
      - Authentication
      description: Close/delete user account
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Account closed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Your account has been closed
        '401':
          description: Invalid password or not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: There was an error closing your account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: Current account password
                  example: currentpassword
              required:
              - password
servers:
- url: "/"
  description: Current server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
